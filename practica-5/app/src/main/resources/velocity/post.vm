#parse("/velocity/layout.vm")
#@mainLayout()
<link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@48,400,0,0"/>
<link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded:opsz,wght,FILL,GRAD@48,400,1,0"/>
<div>
    <div class="container mx-auto">
        #if($article)
            <div class="pt-16 lg:pt-20">
                <div class="border-b border-grey-lighter pb-8 sm:pb-12">
                    <span
                            class="mb-5 inline-block rounded-full bg-green-light px-2 py-1 font-body text-sm text-green sm:mb-8">$article.getStringEtiquetas()</span>
                    <h2
                            class="block font-body text-3xl font-semibold leading-tight text-primary dark:text-white sm:text-4xl md:text-5xl">
                        $article.getTitulo()
                    </h2>
                    <div class="flex items-center pt-5 sm:pt-8">
                        <p class="pr-2 font-body font-light text-primary dark:text-white">
                            $article.getFechaParse()
                        </p>
                        <span class="vdark:text-white font-body text-grey">//</span>
                        <p class="pl-2 font-body font-light text-primary dark:text-white">
                            $article.getAutor().getNombre()
                        </p>
                    </div>
                </div>
                <div class="prose prose max-w-none border-b border-grey-lighter py-8 dark:prose-dark sm:py-12">
                    <p>$article.getCuerpo()</p>

                </div>
                #if($currentUser)
                    <div class="flex items-center py-10">
                        <section>
                            <div class="flex justify-between items-center mb-6">
                                <h2 class="text-lg font-bold text-gray-700 dark:text-white">Discussion</h2>
                            </div>
                            <form method="POST" class="mb-6">
                                <label class="block text-sm font-bold text-gray-700 dark:text-white" for="comment">
                                    Your comment
                                </label>
                                <textarea
                                        name="comment"
                                        class="block w-full mt-1 border border-primary bg-grey-lightest rounded-md shadow-sm font-body font-light text-primary placeholder-primary transition-colors focus:border-secondary focus:outline-none focus:ring-2 focus:ring-secondary dark:border-secondary"
                                        rows="1"
                                        placeholder="Write a comment..."
                                        required="required"></textarea>
                                <div class="flex items-center justify-start mt-4 gap-x-2">
                                    <button
                                            type="submit"
                                            class="px-6 py-2 text-sm font-semibold rounded-md shadow-md text-sky-100 bg-sky-500 hover:bg-sky-700 focus:outline-none focus:border-gray-900 focus:ring ring-gray-300">
                                        Save
                                    </button>
                                </div>
                            </form>
                            #foreach($comment in $comments)
                                <div class="flex items-center pt-3 sm:pt-3">
                                    <p class="pr-2 font-body font-light text-primary dark:text-white">
                                        <strong class="text-secondary">$comment.getAutor().getNombre():
                                        </strong>$comment.getComentario()
                                    </p>
                                </div>
                            #end
                        </section>
                    </div>
                #end
            </div>
        #else
            <h1 class="hidden font-body text-2xl font-bold text-primary dark:text-white lg:block">Articulo no encontrado</h1>
        #end
    </div>
</div>

<button class="chatbot-toggler">
    <span class="material-symbols-rounded">mode_comment</span>
    <span class="material-symbols-outlined">close</span>
</button>
<div class="chatbot">
    <header>
        <h2>Chat $article.getAutor().getUsername()</h2>
        <span class="close-btn material-symbols-outlined">close</span>
    </header>
    <ul class="chatbox">
    </ul>
    <div class="chat-input">
        <textarea placeholder="Enter a message..." spellcheck="false" required="required"></textarea>
        <span id="send-btn" class="material-symbols-rounded">send</span>
    </div>
</div>
<script>
    //abriendo el objeto para el websocket
    var usuario = "$currentUser";
    var myvar = "$article.getAutor().getUsername()";
    var webSocket;
    var tiempoReconectar = 5000;
    const chatbotToggler = document.querySelector(".chatbot-toggler");
    const closeBtn = document.querySelector(".close-btn");
    const chatbox = document.querySelector(".chatbox");
    const chatInput = document.querySelector(".chat-input textarea");
    const sendChatBtn = document.querySelector(".chat-input span");

    let userMessage = null; // Variable to store user's message
    const inputInitHeight = chatInput.scrollHeight;

    const createChatLi = (message, className) => {
        // Create a chat <li> element with passed message and className
        const chatLi = document.createElement("li");
        chatLi
                .classList
                .add("chat", `${className}`);
        let chatContent = className === "outgoing"
                ? `<p></p>`
                : `<p></p>`;
        chatLi.innerHTML = chatContent;
        chatLi
                .querySelector("p")
                .textContent = message;
        return chatLi; // return chat <li> element
    };

    const handleChat = () => {
        userMessage = chatInput
                .value
                .trim(); // Get user entered message and remove extra whitespace
        if (!userMessage)
            return;

        // Clear the input textarea and set its height to default
        chatInput.value = "";
        chatInput.style.height = `${inputInitHeight}px`;

        // Append the user's message to the chatbox
        webSocket.send(userMessage);
        chatbox.appendChild(createChatLi(userMessage, "outgoing"));
        chatbox.scrollTo(0, chatbox.scrollHeight);
    };

    function recibirInformacionServidor(mensaje){
        chatbox.appendChild(createChatLi(mensaje.data, "incoming"));
    }

    function conectar() {
        webSocket = new WebSocket("ws://" + location.hostname + ":" + location.port + `/mensajeServidor/${usuario}/${myvar}`);

        //indicando los eventos:
        webSocket.onmessage = function(data){recibirInformacionServidor(data);};
        webSocket.onopen  = function(e){ console.log("Conectado - status "+this.readyState); };
        webSocket.onclose = function(e){
            console.log("Desconectado - status "+this.readyState);
        };
    }

    function verificarConexion(){
        if(!webSocket || webSocket.readyState == 3){
            conectar();
        }
    }

    setInterval(verificarConexion, tiempoReconectar); //para reconectar.

    chatInput.addEventListener("input", () => {
        // Adjust the height of the input textarea based on its content
        chatInput.style.height = `${inputInitHeight}px`;
        chatInput.style.height = `${chatInput.scrollHeight}px`;
    });

    chatInput.addEventListener("keydown", (e) => {
        // If Enter key is pressed without Shift key and the window width is greater than 800px, handle the
        // chat
        if (e.key === "Enter" && !e.shiftKey && window.innerWidth > 800) {
            e.preventDefault();
            handleChat();
        }
    });

    sendChatBtn.addEventListener("click", handleChat);
    closeBtn.addEventListener("click", () => document.body.classList.remove("show-chatbot"));
    chatbotToggler.addEventListener("click", () => document.body.classList.toggle("show-chatbot"));
    conectar();
</script>
#end